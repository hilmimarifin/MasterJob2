// <auto-generated />
using MasterJob.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MasterJob.Migrations
{
    [DbContext(typeof(MasterJobContext))]
    [Migration("20230222095853_updateRelation")]
    partial class updateRelation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MasterJob.Models.Employee", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("character varying")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<string>("JobPositionId")
                        .HasColumnType("character varying")
                        .HasColumnName("job_position_id");

                    b.Property<string>("JobTitleId")
                        .HasColumnType("character varying")
                        .HasColumnName("job_title_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("name");

                    b.Property<string>("Nik")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("nik");

                    b.HasKey("Id")
                        .HasName("employee_pk");

                    b.HasIndex("JobPositionId");

                    b.ToTable("employee", (string)null);
                });

            modelBuilder.Entity("MasterJob.Models.JobPosition", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("character varying")
                        .HasColumnName("id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("code");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("name");

                    b.Property<string>("TitleId")
                        .HasColumnType("character varying")
                        .HasColumnName("title_id");

                    b.HasKey("Id")
                        .HasName("job_position_pk");

                    b.HasIndex("TitleId");

                    b.ToTable("job_position", (string)null);
                });

            modelBuilder.Entity("MasterJob.Models.JobTitle", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("character varying")
                        .HasColumnName("id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("code");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("job_title_pk");

                    b.ToTable("job_title", (string)null);
                });

            modelBuilder.Entity("MasterJob.Models.Employee", b =>
                {
                    b.HasOne("MasterJob.Models.JobPosition", "JobPosition")
                        .WithMany("Employees")
                        .HasForeignKey("JobPositionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("employee_fk");

                    b.Navigation("JobPosition");
                });

            modelBuilder.Entity("MasterJob.Models.JobPosition", b =>
                {
                    b.HasOne("MasterJob.Models.JobTitle", "Title")
                        .WithMany("JobPositions")
                        .HasForeignKey("TitleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("job_position_fk");

                    b.Navigation("Title");
                });

            modelBuilder.Entity("MasterJob.Models.JobPosition", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("MasterJob.Models.JobTitle", b =>
                {
                    b.Navigation("JobPositions");
                });
#pragma warning restore 612, 618
        }
    }
}
